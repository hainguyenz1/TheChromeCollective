services:
  # MongoDB Database (Commented out - using MongoDB Atlas instead)
  # mongodb:
  #   image: mongo:7.0
  #   container_name: chrome_collective_mongodb
  #   restart: unless-stopped
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: password123
  #     MONGO_INITDB_DATABASE: chrome_collective
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodb_data:/data/db
  #     - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #   networks:
  #     - chrome_collective_network
  #   security_opt:
  #     - no-new-privileges:true
  #   read_only: false

  # MinIO Object Storage
  minio:
    image: minio/minio:RELEASE.2024-01-16T16-07-38Z
    container_name: chrome_collective_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - chrome_collective_network
    security_opt:
      - no-new-privileges:true

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chrome_collective_backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5002
      MONGODB_URI: mongodb+srv://hainguyen29100:Hai29102001@cluster0.8ry4j7n.mongodb.net/chrome_collective?retryWrites=true&w=majority&appName=Cluster0
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      MINIO_BUCKET: chrome-collective-images
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "5002:5002"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - minio
    networks:
      - chrome_collective_network
    command: npm run dev
    security_opt:
      - no-new-privileges:true

  # Redis Cache (for future use)
  redis:
    image: redis:7.2-alpine
    container_name: chrome_collective_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chrome_collective_network
    security_opt:
      - no-new-privileges:true
    command: redis-server --appendonly yes --requirepass redispassword123

  # Frontend Development Server (Expo)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chrome_collective_frontend
    restart: unless-stopped
    environment:
      EXPO_DEVTOOLS_LISTEN_ADDRESS: 0.0.0.0
      REACT_NATIVE_PACKAGER_HOSTNAME: 0.0.0.0
      EXPO_HOST: lan
    ports:
      - "19000:19000"  # Expo DevTools
      - "19001:19001"  # Expo CLI
      - "19002:19002"  # Expo Web
      - "8081:8081"    # Metro Bundler
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - chrome_collective_network
    security_opt:
      - no-new-privileges:true

volumes:
  mongodb_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local

networks:
  chrome_collective_network:
    driver: bridge 